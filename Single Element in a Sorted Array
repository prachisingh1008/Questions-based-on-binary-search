class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int n=nums.size();
        int start=0;
        int end=n-1;
        if(n==1)
        return(nums[0]);
        /*
//same hai bs time limit exceed ho rahi kyunki 1 hi condition baar baar check kr rahe
while(start<=end)

        {
            int mid=start+(end-start)/2;
            if(nums[mid]==nums[mid+1]&&mid%2!=0)
            end=mid-1;
            else if(nums[mid]==nums[mid-1]&&mid%2!=0)
            start==mid+1;
            else if(nums[mid]==nums[mid+1]&&mid%2==0)
            start=mid+2;
            else if(nums[mid]==nums[mid-1]&&mid%2==0)
            end=mid;
          
           
        }
        return nums[start];*/
        while (start < end) {
            int mid = start + (end - start) / 2;

            if (mid % 2!=0) {
            
                if (nums[mid] == nums[mid - 1]) {
                    start = mid + 1;
                } else {
                    end = mid - 1;
                }
            } else {
                // Adjust mid to ensure it's an odd index
                if (nums[mid] == nums[mid + 1]) {
                    start = mid + 2;
                } else {
                    end = mid;
                }
            }
        }

        return nums[start];
  
    }
};


Input: nums = [1,1,2,3,3,4,4,8,8]
Output: 2
